name: Deploy to Yandex Cloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Yandex Container Registry
      uses: docker/login-action@v3
      with:
        registry: cr.yandex
        username: json_key
        password: ${{ secrets.YC_SERVICE_ACCOUNT_KEY }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ secrets.YC_REGISTRY }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Install Yandex CLI
      run: |
        curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
        echo "/home/runner/yandex-cloud/bin" >> $GITHUB_PATH

    - name: Configure Yandex CLI
      run: |
        echo '${{ secrets.YC_SERVICE_ACCOUNT_KEY }}' > key.json
        yc config profile create deploy-profile
        yc config set service-account-key key.json
        yc config set folder-id ${{ secrets.YANDEX_FOLDER_ID }}
        rm key.json

    - name: Update Serverless Container
      run: |
        yc serverless container revision deploy \
          --container-name ${{ secrets.YC_CONTAINER }} \
          --image ${{ secrets.YC_REGISTRY }}:latest \
          --cores 1 \
          --memory 1GB \
          --concurrency 1 \
          --execution-timeout 30s \
          --service-account-id ${{ secrets.YC_SERVICE_ACCOUNT }} \
          --environment REACT_APP_OPENAI_API_KEY=${{ secrets.REACT_APP_OPENAI_API_KEY }} \
          --environment YANDEX_FOLDER_ID=${{ secrets.YANDEX_FOLDER_ID }} \
          --environment YANDEX_SEARCH_API_KEY=${{ secrets.YANDEX_SEARCH_API_KEY }}

    - name: Get Container URL
      run: |
        CONTAINER_URL=$(yc serverless container get ${{ secrets.YC_CONTAINER }} --format json | jq -r '.url')
        echo "ðŸš€ Deployment successful! Container URL: $CONTAINER_URL"